{"version":3,"sources":["helpers/getWoeidByCoords.js","helpers/getPosition.js","components/CurrentLocation.js","helpers/getWoeidByLocation.js","helpers/localStorage.js","components/modal/LocationItem.js","components/modal/ModalSearchCity.js","components/SearchCity.js","helpers/celsiusToFahrenheit.js","components/Weather.js","components/panelInfo/WeatherCard.js","components/panelInfo/WeatherNextDays.js","components/panelInfo/cardsToday/Wind.js","components/panelInfo/cardsToday/Humidity.js","components/panelInfo/cardsToday/Visibility.js","components/panelInfo/cardsToday/AirPressure.js","components/panelInfo/WeatherInfoToday.js","components/panelInfo/ConvertTemperature.js","components/panelInfo/WeatherPanelInfo.js","helpers/getWeather.js","theme/colors.js","WeatherApp.js","index.js"],"names":["getWoeidByCoords","latitude","longitude","fnState","a","isLoading","error","woeid","url","fetch","resp","json","data","console","warn","getPosition","navigator","geolocation","getCurrentPosition","pos","crd","coords","err","code","message","enableHighAccuracy","timeout","maximumAge","Icon","styled","i","theme","third","fourth","CurrentLocation","setWoeid","onClick","getWoeidByLocation","location","getStorage","JSON","parse","localStorage","getItem","setItem","stringify","reverse","Item","li","second","LocationItem","locationStorage","useState","hover","setHover","onMouseEnter","onMouseLeave","Modal","div","first","modalShow","CloseModal","p","Form","form","WrapperInput","Input","input","Search","bgBtn","List","ul","ModalSearchCity","setModalShow","setLocation","storage","setStorage","size","onSubmit","e","preventDefault","length","newElement","slice","addStorage","target","reset","style","position","marginLeft","type","name","placeholder","autoComplete","onChange","value","trim","map","id","Button","button","SearchCity","celsiusToFahrenheit","celsius","Section","section","Img","img","Temperature","Span","span","WeatherName","Date","SpanMoment","City","SpanIcon","Weather","weather","temperatureUnits","abbr","consolidated_weather","weather_state_abbr","weather_state_name","temp","the_temp","time","title","src","alt","Math","round","format","Card","Paragraph","ParagraphMinTemperature","WeatherCard","altAttribute","maxTemperature","minTemperature","Container","WeatherNextDays","weatherNextDays","applicable_date","max_temp","min_temp","CardTitle","h2","CardValue","CardUnits","ContainerWindDirection","props","windDirection","WindDirectionCompas","Wind","windSpeed","windDirectionCompas","LabelProgressBar","ProgressBar","ProgressBarValues","ProgressBarFill","humidity","progressBarFill","Humidity","Visibility","visibility","toFixed","replace","AirPressure","airPressure","TodaySection","CardContainer","Title","h1","SmallCard","WeatherInfoToday","active","tempBtnText","tempBtn","ConvertTemperature","setTemperatureUnits","buttons","default","setActive","handleClick","btn","PanelInfo","bgPanelInfo","Footer","footer","WeatherPanelInfo","minDeviceWidth","wind_speed","wind_direction","wind_direction_compass","air_pressure","getWeather","GlobalStyle","createGlobalStyle","TopBar","Info","WeatherApp","setWeather","useEffect","colors","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17cc61b2.chunk.js","sourcesContent":["/**\n * Change the state for a woeid\n * @param {number} latitude \n * @param {number} longitude \n * @param {state function} fnState \n */\nconst getWoeidByCoords = async (latitude, longitude, fnState) =>{   \n    \n    fnState({\n        isLoading: true,\n        error: null,\n        woeid: 0\n    })\n\n    if(latitude !== null || longitude !== null){\n    \n        const url = `https://www.metaweather.com/api/location/search/?lattlong=${latitude},${longitude}` \n        const proxyurl = 'https://cors-anywhere.herokuapp.com/'; \n    \n        try {\n            const resp = await fetch(proxyurl + url )\n            const data = await resp.json()\n       \n            fnState({\n                isLoading: false,\n                error: null,\n                woeid: data[0].woeid\n            })\n            \n        } catch (error) {\n            console.warn(error)\n\n            fnState({\n                isLoading: false,\n                error,\n                woeid: 0\n            })\n        }\n    }   \n}\n\nexport default getWoeidByCoords","import getWoeidByCoords from \"./getWoeidByCoords\";\n\n/**\n * Set a state with the woeid, the woeid is from your current position\n * @param {state function} fnState \n */\nconst getPosition =  (fnState) =>{\n\n    const options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    };\n  \n    const success = (pos) => {\n      const crd = pos.coords;\n      getWoeidByCoords(crd.latitude, crd.longitude, fnState)\n    };\n  \n    const error = (err) => {     \n      getWoeidByCoords(38.71667, -9.13333, fnState) //By Default\n      console.warn('ERROR(' + err.code + '): ' + err.message);\n    };\n  \n    navigator.geolocation.getCurrentPosition(success, error, options);\n}\n\nexport default getPosition","import React from 'react'\nimport PropTypes from 'prop-types'\nimport getPosition from '../helpers/getPosition'\nimport { MdMyLocation } from \"react-icons/md\";\nimport styled from 'styled-components'\n\nconst Icon = styled.i`\n    background-color: ${({theme}) => theme.third};\n    color: ${({theme}) => theme.fourth};\n    border-radius: 50%;\n    height: 40px;\n    width: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 22px;\n`\n\nexport const CurrentLocation = ({setWoeid}) => {\n    \n    const handleClick = () =>{\n        getPosition(setWoeid)\n    }\n    \n    return (\n        <Icon onClick={handleClick}>\n          <MdMyLocation /> \n        </Icon>\n    )\n}\n\nCurrentLocation.propTypes = {\n    setWoeid: PropTypes.func.isRequired\n}\n","/**\n * Change the state for a woeid\n * @param {string} location \n * @param {state function} fnState \n */\nconst getWoeidByLocation = async (location, fnState) =>{\n    \n    if(location !== '') {\n\n        fnState({\n            isLoading: true,\n            error: null,\n            woeid: 0      \n        })\n    \n        const url = `https://www.metaweather.com/api/location/search/?query=${location}` \n        const proxyurl ='https://cors-anywhere.herokuapp.com/'; \n    \n        try {\n            const resp = await fetch(proxyurl + url )\n            const data = await resp.json()\n            \n            fnState({\n                isLoading: false,\n                error: null,\n                woeid: data[0].woeid\n            })       \n            \n        } catch (error) {                      \n            fnState({\n                isLoading: false,\n                error: true,\n                woeid: 0                \n            })\n            console.warn(`${error}: Location not found`)\n        }\n    }   \n}\n\nexport default getWoeidByLocation\n\n","/**\n * Return de data from de localstorage\n */\nconst getStorage = () =>{\n\n    const data = JSON.parse(localStorage.getItem('location'))   \n    \n    if(data === null){\n        localStorage.setItem('location', JSON.stringify([]))\n        \n        return JSON.parse(localStorage.getItem('location'))   \n    }\n\n    return data.reverse()\n}\n\n/**\n * Save the data in the localstoragr\n * @param {string} newElement \n */\nconst addStorage = (newElement) =>{\n\n    let data = getStorage().reverse()  \n\n    data = [...data, newElement]\n\n    if(data.length > 5){\n        data = data.slice(-5)\n    }\n\n    localStorage.setItem('location', JSON.stringify(data))\n}\n\nexport {\n    getStorage,\n    addStorage\n}","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport getWoeidByLocation from '../../helpers/getWoeidByLocation'\nimport styled from 'styled-components'\nimport { MdNavigateNext } from 'react-icons/md';\n\nconst Item = styled.li`\n    height: 64px;\n    padding: 21px 12px;\n    margin: 25px 0px;\n    display: flex;\n    justify-content: space-between;\n    color: ${({theme}) => theme.second};\n\n    &:hover{\n        border: 1px solid #616475;\n        cursor: pointer;\n    }    \n`\n\nconst LocationItem = ({locationStorage, setWoeid}) => {\n    \n    const [hover, setHover] = useState(false)\n\n    const handleClick = () =>{        \n        getWoeidByLocation(locationStorage, setWoeid)\n    }\n    \n    const handleMouseEnter = () =>{\n        setHover(true)\n    }\n\n    const handleMouseLeave = () =>{\n        setHover(false)\n    }\n\n    return (\n        <Item             \n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n        >{locationStorage}{hover && <MdNavigateNext />}</Item>\n    )\n}\n\nLocationItem.propTypes = {\n    locationStorage: PropTypes.string.isRequired,\n    setWoeid: PropTypes.func.isRequired\n}\n\nexport default LocationItem\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport getWoeidByLocation from '../../helpers/getWoeidByLocation';\nimport PropTypes from 'prop-types';\nimport { getStorage, addStorage } from '../../helpers/localStorage';\nimport { v4 as id } from 'uuid';\nimport LocationItem from './LocationItem';\nimport { MdClose, MdSearch } from 'react-icons/md';\n\nconst Modal = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;     \n    width: 100vw;\n    height: 100vh;\n    background-color: ${({theme}) =>theme.first};\n    color: #E7E7EB;\n    transform: ${({modalShow}) => modalShow ? 'scale(1)' : 'scale(0)'};  \n    transition: transform .3s;\n    z-index: 100;\n\n    @media (min-width: 1024px) {\n        width: 460px;         \n    }\n`;\nconst CloseModal = styled.p`\n    position: absolute;\n    top: -10px;\n    right: 17px;    \n    cursor: pointer;   \n`\nconst Form = styled.form`\n    margin: 60px 12px 0 12px;\n    display: flex;\n    justify-content: space-between;    \n    align-items: center;       \n`\nconst WrapperInput = styled.div`   \n    position: relative;\n    display: flex;  \n    align-items: center;\n    color: ${({theme}) => theme.second};\n`\nconst Input = styled.input`\n    height: 48px;\n    width: 252px;   \n    border: 1px solid white; \n    color: ${({theme}) => theme.second};\n    background-color: ${({theme}) => theme.first};\n    padding-left: 50px; \n`\nconst Search = styled.input`\n    height: 48px;\n    width: 86px;\n    color: white;\n    background-color: ${({theme}) => theme.bgBtn};\n    border: none;\n    font-size: 16px;\n    font-weight: 600;\n`\nconst List = styled.ul`\n    width: 94%; \n    list-style: none;\n    text-transform: capitalize;\n    padding: 0;\n    margin: 5px auto;\n    color: ${({theme}) => theme.fourth};\n`\n\nexport const ModalSearchCity = ({modalShow, setModalShow, setWoeid}) => {  \n    \n    const [location, setLocation] = useState('')\n    const [storage, setStorage] = useState(getStorage())\n\n    const handleModal = () => setModalShow(false)\n    \n    const handleLocation = (e) => {\n\n        setLocation(e.target.value.trim())      \n    }\n    \n    const handleSubmit = (e) =>{\n \n        e.preventDefault()       \n\n        if(location.length > 2){\n            addStorage(location)\n            setStorage(getStorage()) \n            getWoeidByLocation(location, setWoeid) \n            \n            e.target.reset()\n        }           \n    }    \n\n    return (        \n       <>\n            <Modal modalShow={modalShow}>\n                <CloseModal onClick={handleModal}><MdClose size=\"1.4em\"/></CloseModal>\n                <Form onSubmit={handleSubmit}>                    \n                    <WrapperInput>\n                        <MdSearch size=\"1.4em\" style={{position: 'absolute', marginLeft: '10px'}}/>\n                        <Input                             \n                            type='search' \n                            name=\"browser\" \n                            placeholder='search location'\n                            autoComplete=\"off\"\n                            onChange={handleLocation}\n                        />\n                    </WrapperInput>\n                    <Search type='submit' value='Search'/>\n                </Form>\n\n                <List>\n                    {\n                        storage.map(locationStorage =>                   \n                            <LocationItem \n                                key={id()}\n                                locationStorage={locationStorage}\n                                setWoeid={setWoeid}\n                            />\n                        )\n                    }\n                </List>\n\n            </Modal>\n        </>\n    )\n}\n\nModalSearchCity.propTypes = {\n    modalShow: PropTypes.bool.isRequired,\n    setModalShow: PropTypes.func.isRequired,\n    setWoeid: PropTypes.func.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n    background-color: ${({theme}) => theme.third};\n    color: ${({theme}) => theme.fourth};\n    font-weight: 500;\n    font-size: 16px;\n    padding: 0 18px;\n    height: 40px;\n    cursor: pointer;\n    border: none;    \n`\n\nexport const SearchCity = ({setModalShow}) => {\n\n    const handleClick = () =>{\n        setModalShow(true)\n    }\n\n    return (\n        <Button onClick={handleClick}>Seach for places</Button>\n    )\n}\n\nSearchCity.propTypes = {\n    setModalShow: PropTypes.func.isRequired  \n}\n","/**\n * Transform celsius to Fahrenheit\n * @param {number} celsius \n */\nconst celsiusToFahrenheit = celsius =>{\n    return celsius * 1.8 + 32\n}   \n\nexport default celsiusToFahrenheit","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { MdPlace } from \"react-icons/md\";\nimport Moment from 'react-moment';\nimport celsiusToFahrenheit from '../helpers/celsiusToFahrenheit';\nimport styled from 'styled-components'\n\nconst Section = styled.section`\n    text-align: center;\n    margin-top: 58px;\n    max-height: calc(100vh - 134px );//134 = 76+58\n\n    @media (min-width: 1024px) {\n        grid-column: 1;\n        grid-row: 2;     \n    }      \n`\nconst Img = styled.img`\n    width: 175px;\n    height: 175px; \n`\nconst Temperature = styled.p`\n    font-size: 144px;\n    font-weight: 500;\n    color: white;\n    margin-top: 40px;\n    margin-bottom: 0;    \n`\nconst Span = styled.span`\n    font-size: 48px;\n    font-weight: 500;\n    color: ${({theme}) => theme.second};     \n`\nconst WeatherName = styled.p`\n    font-size: 36px;\n    font-weight: 600;\n    margin-top: 23px;\n    margin-bottom: 48px;\n\n    @media (min-width: 1024px) {\n        margin-top: 87px;\n        margin-bottom: 0;\n    }     \n`\nconst Date = styled.p`   \n    font-weight: 500;\n    word-spacing: 16px;\n    margin-top: 0;\n    margin-bottom: 32px;\n\n    @media (min-width: 1024px) {\n        margin-top: 87px;\n    }  \n`\nconst SpanMoment = styled.span`\n    word-spacing: 0px;\n`\nconst City = styled.p`  \n    font-weight: 600;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0;   \n`\nconst SpanIcon = styled.span` \n    font-size: 1.4em;\n    margin-right: 5px;\n`\n\nexport const Weather = ({isLoading, error, weather, temperatureUnits}) => {\n\n    if(isLoading){\n\n        return(<Section><p>Getting data...</p></Section>)\n\n    }else if(error){\n\n        return(<Section><p>OPPS! Data not found :(</p></Section>)\n\n    }else{\n\n        const abbr = weather.consolidated_weather[0].weather_state_abbr\n        const name = weather.consolidated_weather[0].weather_state_name\n        const temp = weather.consolidated_weather[0].the_temp\n        const time = weather.time\n        const title = weather.title\n\n        return(\n            <Section>       \n                <Img src={`assets/img/${abbr}.png`} alt={name}/>\n                \n                {\n                    temperatureUnits === 'celsius'\n                        ? <Temperature>{Math.round(temp)}<Span>ºC</Span></Temperature>\n                        : <Temperature>{Math.round(celsiusToFahrenheit(temp))}<Span>ºF</Span></Temperature>\n                }\n                \n                <WeatherName>{name}</WeatherName>\n                <Date>Today · <SpanMoment><Moment format='ddd, D MMM'>{time}</Moment></SpanMoment></Date>\n                <City>\n                    <SpanIcon><MdPlace /></SpanIcon>{` ${title}`}\n                </City>              \n            </Section>    \n        )\n    }\n}\n\nWeather.propTypes ={\n    weather: PropTypes.object,\n    isLoading: PropTypes.bool.isRequired,\n    error: PropTypes.bool,\n    temperatureUnits: PropTypes.string.isRequired    \n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment';\nimport celsiusToFahrenheit from '../../helpers/celsiusToFahrenheit';\nimport styled from 'styled-components'\n\nconst Card = styled.div`\n    width: 120px;\n    height: 177px;\n    padding: 1em;   \n    text-align: center;\n    font-size: 15px;\n    font-weight: 500;\n    color: ${({theme}) => theme.fourth};\n    background-color: ${({theme}) => theme.first};\n`\nconst Paragraph = styled.p`\n    margin: 0;\n`\nconst ParagraphMinTemperature = styled.p`\n    margin: 0;\n    color: ${({theme}) => theme.second};\n`\nconst Img = styled.img`\n    width: 62px;\n    height: 62px;\n    margin: 16px 0;\n`\nconst Temperature = styled.div`\n    display: flex;\n    justify-content: space-evenly;   \n`\n\nexport const WeatherCard = ({data, abbr, altAttribute, maxTemperature, minTemperature, temperatureUnits}) => {\n      \n    return (\n        <Card>            \n            {\n                data === 'Tomorrow' \n                    ? <Paragraph>{data}</Paragraph>\n                    : <Paragraph><Moment format='ddd, D MMM'>{data}</Moment></Paragraph> \n            }\n\n           <Img src={`assets/img/${abbr}.png`} alt={altAttribute}/>\n              \n            <Temperature>\n                {\n                    temperatureUnits === 'celsius'\n                    ?   <>\n                            <Paragraph>{Math.round(maxTemperature)}ºC</Paragraph>\n                            <ParagraphMinTemperature>{Math.round(minTemperature)}ºC</ParagraphMinTemperature>\n                        </>\n                    :   <>\n                            <Paragraph>{Math.round(celsiusToFahrenheit(maxTemperature))}ºF</Paragraph>\n                            <ParagraphMinTemperature>{Math.round(celsiusToFahrenheit(minTemperature))}ºF</ParagraphMinTemperature>\n                        </> \n                }\n            </Temperature>\n        </Card>\n    )\n}\n\nWeatherCard.propTypes = {\n    data: PropTypes.string.isRequired,\n    abbr: PropTypes.string.isRequired,\n    altAttribute: PropTypes.string.isRequired,\n    maxTemperature: PropTypes.number.isRequired,\n    minTemperature: PropTypes.number.isRequired,\n    temperatureUnits: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { WeatherCard } from './WeatherCard'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(120px, 120px));\n    gap: 2em 26px;\n    justify-content: center; \n    margin: 0 10px;    \n`\n\nexport const WeatherNextDays = ({weatherNextDays, temperatureUnits}) => {\n    \n    const weather = weatherNextDays.slice(1)  \n  \n    return (\n        <Container>\n            {\n                weather.map( (weather, i) => \n                   <WeatherCard \n                        key={weather.id}\n                        data={i === 0 ? 'Tomorrow' : weather.applicable_date}\n                        abbr={weather.weather_state_abbr}\n                        altAttribute={weather.weather_state_name}\n                        maxTemperature={weather.max_temp}\n                        minTemperature={weather.min_temp}\n                        temperatureUnits={temperatureUnits}\n                    />\n                )\n            }\n        </Container>\n    )\n}\n\nWeatherNextDays.propTypes = {\n    weatherNextDays: PropTypes.array.isRequired,\n    temperatureUnits: PropTypes.string.isRequired\n}\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { MdNavigation } from 'react-icons/md';\nimport PropTypes from 'prop-types'\n\nconst CardTitle = styled.h2`\n    font-size: 16px;\n    font-weight: 500;\n    margin-top: 22px;\n    margin-bottom: 0%;\n`\nconst CardValue = styled.p`\n    font-size: 64px;\n    font-weight: 700;\n    margin-top: 6px;\n    margin-bottom: 30px;\n`\nconst CardUnits = styled.span`\n    font-size: 36px;\n    font-weight: 500;    \n`\nconst ContainerWindDirection = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nconst Icon = styled.i`\n    background-color: ${({theme}) => theme.third};\n    border-radius: 50%;\n    width: 28px;\n    height: 28px;\n    display: flex;\n    justify-content: center;\n    align-items: center; \n    transform: rotate(${props => props.windDirection}deg);\n`\nconst WindDirectionCompas = styled.p`\n    font-size: 14px;\n    font-weight: 500;\n    margin: 0;\n    padding-left: 15px; \n`\nexport const Wind = ({windSpeed, windDirection, windDirectionCompas}) => {\n    \n    return (\n        <>\n            <CardTitle>Wind status</CardTitle>\n            <CardValue>{Math.round(windSpeed)}<CardUnits>mph</CardUnits></CardValue>\n            <ContainerWindDirection>\n                <Icon\n                    windDirection={windDirection}\n                    ><MdNavigation size=\"0.8em\"/>\n                </Icon>\n                <WindDirectionCompas>{windDirectionCompas}</WindDirectionCompas>\n            </ContainerWindDirection> \n        </>\n    )\n}\n\nWind.propTypes = {\n    windSpeed: PropTypes.number.isRequired,\n    windDirection: PropTypes.number.isRequired,\n    windDirectionCompas: PropTypes.string.isRequired\n}","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst CardTitle = styled.h2`\n    font-size: 16px;\n    font-weight: 500;\n    margin-top: 22px;\n    margin-bottom: 0%;\n`\nconst CardValue = styled.p`\n    font-size: 64px;\n    font-weight: 700;\n    margin-top: 6px;\n    margin-bottom: 12px;\n`\nconst CardUnits = styled.span`\n    font-size: 36px;\n    font-weight: 500;    \n`\nconst LabelProgressBar = styled.div`\n    width: 229px;\n    margin: 0 auto;\n    display:flex;\n    justify-content: space-between;     \n`\nconst ProgressBar = styled.div`\n    height: 8px;\n    width: 229px;\n    background-color: ${({theme})=> theme.fourth};\n    margin: 0 auto;\n    border-radius: 20px; \n    position: relative;    \n` \nconst ProgressBarValues = styled.p`\n    margin: 0 2px 2px 2px;\n    font-size: 12px;\n    font-weight: 700;\n    color: ${({theme}) => theme.second};\n`\nconst ProgressBarFill = styled.span`    \n    display: block;\n    height: 8px;\n    width: ${props => props.humidity}%;\n    background-color: ${({theme})=> theme.progressBarFill};\n    border-radius: 20px;   \n\n    &::after{\n        position: absolute;\n        content:'%';\n        top: 16px;\n        right: 0;\n        font-size: 12px;\n        font-weight: 700;\n        color: ${({theme}) => theme.second};\n    }\n`\n\nexport const Humidity = ({humidity}) => {\n    return (\n        <>\n            <CardTitle>Humidity</CardTitle>\n            <CardValue>{humidity}<CardUnits>%</CardUnits></CardValue>\n            \n            <LabelProgressBar>\n                <ProgressBarValues>0</ProgressBarValues>\n                <ProgressBarValues>50</ProgressBarValues>\n                <ProgressBarValues>100</ProgressBarValues>\n            </LabelProgressBar>\n\n            <ProgressBar>\n                <ProgressBarFill humidity={humidity}></ProgressBarFill>\n            </ProgressBar>\n\n        </>\n    )\n}\n\nHumidity.propTypes = {\n    humidity: PropTypes.number.isRequired\n}","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types';\n\nconst CardTitle = styled.h2`\n    font-size: 16px;\n    font-weight: 500;\n    margin-top: 22px;\n    margin-bottom: 0%;\n`\nconst CardValue = styled.p`\n    font-size: 64px;\n    font-weight: 700;\n    margin-top: 6px;\n    margin-bottom: 12px;\n`\nconst CardUnits = styled.span`\n    font-size: 36px;\n    font-weight: 500;    \n`\n\nexport const Visibility = ({visibility}) => {\n    return (\n        <>\n            <CardTitle>Visibility</CardTitle>\n            <CardValue>{visibility.toFixed(1).replace(/\\./g, ',')}<CardUnits> miles</CardUnits></CardValue>            \n        </>\n    )\n}\n\nVisibility.propTypes = {\n    visibility: PropTypes.number.isRequired\n}","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst CardTitle = styled.h2`\n    font-size: 16px;\n    font-weight: 500;\n    margin-top: 22px;\n    margin-bottom: 0%;\n`\nconst CardValue = styled.p`\n    font-size: 64px;\n    font-weight: 700;\n    margin-top: 6px;\n    margin-bottom: 12px;\n`\nconst CardUnits = styled.span`\n    font-size: 36px;\n    font-weight: 500;    \n`\n\nexport const AirPressure = ({airPressure}) => {\n    return (\n        <>\n            <CardTitle>Air Presure</CardTitle>\n            <CardValue>{airPressure}<CardUnits> mb</CardUnits></CardValue>            \n        </>\n    )\n}\n\nAirPressure.propTypes = {\n    airPressure: PropTypes.number.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Wind } from './cardsToday/Wind'\nimport { Humidity } from './cardsToday/Humidity'\nimport { Visibility } from './cardsToday/Visibility'\nimport { AirPressure } from './cardsToday/AirPressure'\n\nconst TodaySection = styled.section`\n    margin-top: 51px;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 760px;    \n`\nconst CardContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;    \n`\nconst Title = styled.h1`\n    font-size: 24px;\n    font-weight: 700;\n    color: ${({theme}) => theme.fourth};    \n    margin-left: 24px;\n    margin-bottom: 32px;\n`\nconst Card = styled.section`\n    width: 328px;\n    height: 204px;\n    color: ${({theme}) => theme.fourth};\n    background-color: ${({theme}) => theme.first};\n    text-align: center;\n    margin: 0 24px 32px 24px;    \n`\nconst SmallCard = styled(Card)`\n    height: 159px;\n`\n\nexport const WeatherInfoToday = ({windSpeed, windDirection, windDirectionCompas, humidity, visibility, airPressure}) => {\n    \n    return (\n        <TodaySection>\n            <Title>Today's Hightlights</Title>\n            <CardContainer>\n                <Card>\n                    <Wind \n                        windSpeed={windSpeed}\n                        windDirection={windDirection}\n                        windDirectionCompas={windDirectionCompas}\n                    />\n                </Card>\n\n                <Card>\n                    <Humidity \n                        humidity={humidity}\n                    />\n                </Card>\n\n                <SmallCard>\n                    <Visibility\n                        visibility={visibility}\n                    /> \n                </SmallCard>\n\n                <SmallCard>\n                    <AirPressure \n                        airPressure={Math.round(airPressure)}                \n                    />             \n                </SmallCard>           \n\n            </CardContainer>\n        </TodaySection>\n    )\n}\n\nWeatherInfoToday.propTypes = {\n    windSpeed: PropTypes.number.isRequired,\n    windDirection: PropTypes.number.isRequired,\n    windDirectionCompas: PropTypes.string.isRequired,\n    humidity: PropTypes.number.isRequired,\n    visibility: PropTypes.number.isRequired,\n    airPressure: PropTypes.number.isRequired,\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Section = styled.section`\n  display: flex;\n  justify-content: flex-end;\n  width: 704px; \n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 66px;\n`\nconst Button = styled.button`\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    font-weight: 700;\n    margin-left: 12px;    \n    color: ${props => props.active ? ({theme}) => theme.tempBtnText : ({theme}) => theme.fourth};\n    background-color: ${props => props.active ? ({theme}) => theme.fourth : ({theme}) => theme.tempBtn};;\n    border: none;\n    cursor: pointer;\n`\n\nexport const ConvertTemperature = ({setTemperatureUnits}) => {\n    \n    const buttons = [{title: 'ºC', default: true}, {title: 'ºF', default: false}]  \n    const [active, setActive] = useState(buttons[0])\n\n    const handleClick = (e) =>{\n\n        if(e.target.value === 'ºC'){\n            setTemperatureUnits('celsius')\n            setActive(buttons[0])\n\n        }else{\n            setTemperatureUnits('fahrenheit')\n            setActive(buttons[1])\n        }\n    }\n\n    return (\n        <Section>\n            {\n                buttons.map(btn =>(                \n                    <Button\n                        key={btn.title}\n                        active={active.default === btn.default}\n                        value={btn.title}\n                        onClick={handleClick}\n                    >{btn.title}</Button>)\n                \n                ) \n            }\n\n        </Section>\n    )\n}\n\nConvertTemperature.propTypes = {\n    setTemperatureUnits: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { WeatherNextDays } from './WeatherNextDays'\nimport { WeatherInfoToday } from './WeatherInfoToday'\nimport { ConvertTemperature } from './ConvertTemperature'\nimport styled from 'styled-components'\nimport MediaQuery from 'react-responsive'\n\nconst PanelInfo = styled.section`\n    grid-column: 2;\n    grid-row: 1 / span 2;\n    background-color: ${({theme}) => theme.bgPanelInfo};\n    padding-top: 52px;\n\n    @media (min-width: 1024px) {\n        padding-top: 42px;         \n    }      \n`\nconst Footer = styled.footer`\n    text-align: center;\n    color: ${({theme}) => theme.fourth};\n    font-weight: 500;\n`\n\nexport const WeatherPanelInfo = ({isLoading, error, weather, temperatureUnits, setTemperatureUnits}) => {    \n   \n    if(isLoading || error){\n        return null\n    }else{\n        return(\n            <PanelInfo>\n                <MediaQuery minDeviceWidth={1024}>                    \n                    <ConvertTemperature                         \n                        setTemperatureUnits={setTemperatureUnits} \n                    />\n                </MediaQuery>\n                <WeatherNextDays \n                    weatherNextDays={weather.consolidated_weather} \n                    temperatureUnits={temperatureUnits}\n                />\n                <WeatherInfoToday \n                    windSpeed={weather.consolidated_weather[0].wind_speed}\n                    windDirection={weather.consolidated_weather[0].wind_direction}\n                    windDirectionCompas={weather.consolidated_weather[0].wind_direction_compass}\n                    humidity={weather.consolidated_weather[0].humidity}\n                    visibility={weather.consolidated_weather[0].visibility}\n                    airPressure={weather.consolidated_weather[0].air_pressure}\n                />\n                <Footer>Oversv @ DevChallenges.io</Footer>\n            </PanelInfo>\n        )\n    }\n}\n//TODO add all propTypes\n\nWeatherPanelInfo.propTypes = {\n    isLoading: PropTypes.bool.isRequired,\n    error: PropTypes.bool,\n    weather: PropTypes.object,\n    temperatureUnits: PropTypes.string.isRequired,\n    setTemperatureUnits: PropTypes.func.isRequired\n}\n","/**\n * Set a state with the weather of woeid\n * @param {number} woeid \n * @param {state function} fnState \n */\nconst getWeather = async (woeid, fnState) =>{  \n    \n    fnState({\n        isLoading: true,\n        error: null,\n        data: null           \n    })\n    \n    if(woeid !== 0 ){\n       \n        const url = `https://www.metaweather.com/api/location/${woeid}/` \n        const proxyurl ='https://cors-anywhere.herokuapp.com/'; \n    \n        try {\n            const resp = await fetch(proxyurl + url )\n            const data = await resp.json()\n\n            fnState({\n                isLoading: false,\n                error: null,\n                data\n            })\n            \n        } catch (error) {\n            fnState({\n                isLoading: false,\n                error: true,\n                data: null,\n            })\n            console.warn(error)\n        }\n    }   \n}\n\nexport default getWeather","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    first: '#1E213A',\n    second: '#A09FB1',\n    third: '#6E707A',\n    fourth: '#E7E7EB',\n    bgBtn: '#3C47E9',\n    bgPanelInfo: '#100E1D',\n    progressBarFill: '#FFEC65',\n    tempBtn: '#585676',\n    tempBtnText: '#110E3C'\n}","import React, { useEffect, useState } from 'react'\nimport { CurrentLocation } from './components/CurrentLocation';\nimport { ModalSearchCity } from './components/modal/ModalSearchCity';\nimport { SearchCity } from './components/SearchCity';\nimport { Weather } from './components/Weather';\nimport { WeatherPanelInfo } from './components/panelInfo/WeatherPanelInfo';\nimport getPosition from './helpers/getPosition';\nimport getWeather from './helpers/getWeather';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components'\nimport colors from './theme/colors';\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after{\n    box-sizing: border-box\n  }\n  body{\n    color: ${({theme}) => theme.second};\n    font-family: 'Raleway', sans-serif;\n    font-size: 18px;    \n  }\n\n  main{\n    position: relative;    \n    background-color: ${({theme}) => theme.first};\n    min-height: 100vh;\n    overflow: hidden;\n\n    &::before{\n      content: url(\"./assets/img/Cloud-background.png\");\n      position: absolute;\n      top: 50px;\n      left: -160px;\n      opacity: 0.1;\n      transform: scale(0.85)\n    }\n\n    @media (min-width: 1024px) {\n      display: grid;\n      grid-template-columns: 460px auto;\n      grid-template-rows: 100px auto;           \n    }\n  }\n`\nconst TopBar = styled.section`\n  display: flex;\n  justify-content: space-between;\n  padding: 18px 12px; \n\n    @media (min-width: 1024px) {\n        padding: 42px 46px;         \n    } \n`\nconst Info = styled.p`\n  text-align: center;\n`\n\nexport const WeatherApp = () => {\n\n  const [modalShow, setModalShow] = useState(false)\n  const [woeid, setWoeid] = useState({\n    isLoading: true,\n    error: null,\n    woeid: 0\n  })\n\n  const [weather, setWeather] = useState({\n    isLoading: true,\n    error: null,\n    data: null\n  }) \n\n  const [temperatureUnits, setTemperatureUnits] = useState('celsius')\n  \n  useEffect( ()=>{\n    getPosition(setWoeid)\n  },[])\n\n  useEffect(()=>{\n    getWeather(woeid.woeid, setWeather)\n}, [woeid.woeid]) \n\n  return (\n    <> \n      <ThemeProvider theme={colors}>\n      <GlobalStyle />\n        <main>\n          <TopBar>\n            <SearchCity setModalShow={setModalShow}/>\n            <CurrentLocation setWoeid={setWoeid}/>\n          </TopBar>\n\n          <ModalSearchCity \n            modalShow={modalShow}\n            setModalShow={setModalShow}\n            setWoeid={setWoeid}\n          />   \n          {           \n            (woeid.isLoading) \n              ? <Info>Loading...</Info>          \n              : (woeid.error) \n                ? <Info>Location not found</Info>\n                :<>\n                    <Weather \n                      isLoading={weather.isLoading}\n                      error={weather.error}\n                      weather={weather.data}                  \n                      temperatureUnits={temperatureUnits}\n                    /> \n                   \n                     <WeatherPanelInfo\n                      isLoading={weather.isLoading}\n                      error={weather.error} \n                      weather={weather.data}\n                      temperatureUnits={temperatureUnits}\n                      setTemperatureUnits={setTemperatureUnits}\n                    /> \n                  </> \n          }     \n\n        </main>        \n      </ThemeProvider>\n    </>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport { WeatherApp } from './WeatherApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <WeatherApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}